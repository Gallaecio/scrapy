# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008â€“2020, Scrapy developers
# This file is distributed under the same license as the Scrapy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Scrapy 2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-03 20:13+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/commands.rst:7
msgid "Command line tool"
msgstr ""

#: ../../topics/commands.rst:11
msgid "Scrapy is controlled through the ``scrapy`` command-line tool, to be referred here as the \"Scrapy tool\" to differentiate it from the sub-commands, which we just call \"commands\" or \"Scrapy commands\"."
msgstr ""

#: ../../topics/commands.rst:15
msgid "The Scrapy tool provides several commands, for multiple purposes, and each one accepts a different set of arguments and options."
msgstr ""

#: ../../topics/commands.rst:18
msgid "(The ``scrapy deploy`` command has been removed in 1.0 in favor of the standalone ``scrapyd-deploy``. See `Deploying your project`_.)"
msgstr ""

#: ../../topics/commands.rst:24
msgid "Configuration settings"
msgstr ""

#: ../../topics/commands.rst:26
msgid "Scrapy will look for configuration parameters in ini-style ``scrapy.cfg`` files in standard locations:"
msgstr ""

#: ../../topics/commands.rst:29
msgid "``/etc/scrapy.cfg`` or ``c:\\scrapy\\scrapy.cfg`` (system-wide),"
msgstr ""

#: ../../topics/commands.rst:30
msgid "``~/.config/scrapy.cfg`` (``$XDG_CONFIG_HOME``) and ``~/.scrapy.cfg`` (``$HOME``) for global (user-wide) settings, and"
msgstr ""

#: ../../topics/commands.rst:32
msgid "``scrapy.cfg`` inside a Scrapy project's root (see next section)."
msgstr ""

#: ../../topics/commands.rst:34
msgid "Settings from these files are merged in the listed order of preference: user-defined values have higher priority than system-wide defaults and project-wide settings will override all others, when defined."
msgstr ""

#: ../../topics/commands.rst:38
msgid "Scrapy also understands, and can be configured through, a number of environment variables. Currently these are:"
msgstr ""

#: ../../topics/commands.rst:41
msgid "``SCRAPY_SETTINGS_MODULE`` (see :ref:`topics-settings-module-envvar`)"
msgstr ""

#: ../../topics/commands.rst:42
msgid "``SCRAPY_PROJECT`` (see :ref:`topics-project-envvar`)"
msgstr ""

#: ../../topics/commands.rst:43
msgid "``SCRAPY_PYTHON_SHELL`` (see :ref:`topics-shell`)"
msgstr ""

#: ../../topics/commands.rst:48
msgid "Default structure of Scrapy projects"
msgstr ""

#: ../../topics/commands.rst:50
msgid "Before delving into the command-line tool and its sub-commands, let's first understand the directory structure of a Scrapy project."
msgstr ""

#: ../../topics/commands.rst:53
msgid "Though it can be modified, all Scrapy projects have the same file structure by default, similar to this::"
msgstr ""

#: ../../topics/commands.rst:69
msgid "The directory where the ``scrapy.cfg`` file resides is known as the *project root directory*. That file contains the name of the python module that defines the project settings. Here is an example:"
msgstr ""

#: ../../topics/commands.rst:81
msgid "Sharing the root directory between projects"
msgstr ""

#: ../../topics/commands.rst:83
msgid "A project root directory, the one that contains the ``scrapy.cfg``, may be shared by multiple Scrapy projects, each with its own settings module."
msgstr ""

#: ../../topics/commands.rst:86
msgid "In that case, you must define one or more aliases for those settings modules under ``[settings]`` in your ``scrapy.cfg`` file:"
msgstr ""

#: ../../topics/commands.rst:96
msgid "By default, the ``scrapy`` command-line tool will use the ``default`` settings. Use the ``SCRAPY_PROJECT`` environment variable to specify a different project for ``scrapy`` to use::"
msgstr ""

#: ../../topics/commands.rst:108
msgid "Using the ``scrapy`` tool"
msgstr ""

#: ../../topics/commands.rst:110
msgid "You can start by running the Scrapy tool with no arguments and it will print some usage help and the available commands::"
msgstr ""

#: ../../topics/commands.rst:123
msgid "The first line will print the currently active project if you're inside a Scrapy project. In this example it was run from outside a project. If run from inside a project it would have printed something like this::"
msgstr ""

#: ../../topics/commands.rst:135
msgid "Creating projects"
msgstr ""

#: ../../topics/commands.rst:137
msgid "The first thing you typically do with the ``scrapy`` tool is create your Scrapy project::"
msgstr ""

#: ../../topics/commands.rst:142
msgid "That will create a Scrapy project under the ``project_dir`` directory. If ``project_dir`` wasn't specified, ``project_dir`` will be the same as ``myproject``."
msgstr ""

#: ../../topics/commands.rst:145
msgid "Next, you go inside the new project directory::"
msgstr ""

#: ../../topics/commands.rst:149
msgid "And you're ready to use the ``scrapy`` command to manage and control your project from there."
msgstr ""

#: ../../topics/commands.rst:153
msgid "Controlling projects"
msgstr ""

#: ../../topics/commands.rst:155
msgid "You use the ``scrapy`` tool from inside your projects to control and manage them."
msgstr ""

#: ../../topics/commands.rst:158
msgid "For example, to create a new spider::"
msgstr ""

#: ../../topics/commands.rst:162
msgid "Some Scrapy commands (like :command:`crawl`) must be run from inside a Scrapy project. See the :ref:`commands reference <topics-commands-ref>` below for more information on which commands must be run from inside projects, and which not."
msgstr ""

#: ../../topics/commands.rst:166
msgid "Also keep in mind that some commands may have slightly different behaviours when running them from inside projects. For example, the fetch command will use spider-overridden behaviours (such as the ``user_agent`` attribute to override the user-agent) if the url being fetched is associated with some specific spider. This is intentional, as the ``fetch`` command is meant to be used to check how spiders are downloading pages."
msgstr ""

#: ../../topics/commands.rst:176
msgid "Available tool commands"
msgstr ""

#: ../../topics/commands.rst:178
msgid "This section contains a list of the available built-in commands with a description and some usage examples. Remember, you can always get more info about each command by running::"
msgstr ""

#: ../../topics/commands.rst:184
msgid "And you can see all available commands with::"
msgstr ""

#: ../../topics/commands.rst:188
msgid "There are two kinds of commands, those that only work from inside a Scrapy project (Project-specific commands) and those that also work without an active Scrapy project (Global commands), though they may behave slightly different when running from inside a project (as they would use the project overridden settings)."
msgstr ""

#: ../../topics/commands.rst:194
msgid "Global commands:"
msgstr ""

#: ../../topics/commands.rst:196
msgid ":command:`startproject`"
msgstr ""

#: ../../topics/commands.rst:197
msgid ":command:`genspider`"
msgstr ""

#: ../../topics/commands.rst:198
msgid ":command:`settings`"
msgstr ""

#: ../../topics/commands.rst:199
msgid ":command:`runspider`"
msgstr ""

#: ../../topics/commands.rst:200
msgid ":command:`shell`"
msgstr ""

#: ../../topics/commands.rst:201
msgid ":command:`fetch`"
msgstr ""

#: ../../topics/commands.rst:202
msgid ":command:`view`"
msgstr ""

#: ../../topics/commands.rst:203
msgid ":command:`version`"
msgstr ""

#: ../../topics/commands.rst:205
msgid "Project-only commands:"
msgstr ""

#: ../../topics/commands.rst:207
msgid ":command:`crawl`"
msgstr ""

#: ../../topics/commands.rst:208
msgid ":command:`check`"
msgstr ""

#: ../../topics/commands.rst:209
msgid ":command:`list`"
msgstr ""

#: ../../topics/commands.rst:210
msgid ":command:`edit`"
msgstr ""

#: ../../topics/commands.rst:211
msgid ":command:`parse`"
msgstr ""

#: ../../topics/commands.rst:212
msgid ":command:`bench`"
msgstr ""

#: ../../topics/commands.rst:217
msgid "startproject"
msgstr ""

#: ../../topics/commands.rst:219
msgid "Syntax: ``scrapy startproject <project_name> [project_dir]``"
msgstr ""

#: ../../topics/commands.rst:220
#: ../../topics/commands.rst:236
#: ../../topics/commands.rst:349
#: ../../topics/commands.rst:393
#: ../../topics/commands.rst:416
#: ../../topics/commands.rst:519
#: ../../topics/commands.rst:539
#: ../../topics/commands.rst:555
#: ../../topics/commands.rst:568
msgid "Requires project: *no*"
msgstr ""

#: ../../topics/commands.rst:222
msgid "Creates a new Scrapy project named ``project_name``, under the ``project_dir`` directory. If ``project_dir`` wasn't specified, ``project_dir`` will be the same as ``project_name``."
msgstr ""

#: ../../topics/commands.rst:226
#: ../../topics/commands.rst:240
#: ../../topics/commands.rst:318
#: ../../topics/commands.rst:339
#: ../../topics/commands.rst:405
#: ../../topics/commands.rst:433
#: ../../topics/commands.rst:496
msgid "Usage example::"
msgstr ""

#: ../../topics/commands.rst:233
msgid "genspider"
msgstr ""

#: ../../topics/commands.rst:235
msgid "Syntax: ``scrapy genspider [-t template] <name> <domain>``"
msgstr ""

#: ../../topics/commands.rst:238
msgid "Create a new spider in the current folder or in the current project's ``spiders`` folder, if called from inside a project. The ``<name>`` parameter is set as the spider's ``name``, while ``<domain>`` is used to generate the ``allowed_domains`` and ``start_urls`` spider's attributes."
msgstr ""

#: ../../topics/commands.rst:255
msgid "This is just a convenience shortcut command for creating spiders based on pre-defined templates, but certainly not the only way to create spiders. You can just create the spider source code files yourself, instead of using this command."
msgstr ""

#: ../../topics/commands.rst:263
msgid "crawl"
msgstr ""

#: ../../topics/commands.rst:265
msgid "Syntax: ``scrapy crawl <spider>``"
msgstr ""

#: ../../topics/commands.rst:266
#: ../../topics/commands.rst:282
#: ../../topics/commands.rst:313
#: ../../topics/commands.rst:330
#: ../../topics/commands.rst:457
msgid "Requires project: *yes*"
msgstr ""

#: ../../topics/commands.rst:268
msgid "Start crawling using a spider."
msgstr ""

#: ../../topics/commands.rst:270
#: ../../topics/commands.rst:288
#: ../../topics/commands.rst:371
msgid "Usage examples::"
msgstr ""

#: ../../topics/commands.rst:279
msgid "check"
msgstr ""

#: ../../topics/commands.rst:281
msgid "Syntax: ``scrapy check [-l] <spider>``"
msgstr ""

#: ../../topics/commands.rst:284
msgid "Run contract checks."
msgstr ""

#: ../../topics/commands.rst:310
msgid "list"
msgstr ""

#: ../../topics/commands.rst:312
msgid "Syntax: ``scrapy list``"
msgstr ""

#: ../../topics/commands.rst:315
msgid "List all available spiders in the current project. The output is one spider per line."
msgstr ""

#: ../../topics/commands.rst:327
msgid "edit"
msgstr ""

#: ../../topics/commands.rst:329
msgid "Syntax: ``scrapy edit <spider>``"
msgstr ""

#: ../../topics/commands.rst:332
msgid "Edit the given spider using the editor defined in the ``EDITOR`` environment variable or (if unset) the :setting:`EDITOR` setting."
msgstr ""

#: ../../topics/commands.rst:335
msgid "This command is provided only as a convenience shortcut for the most common case, the developer is of course free to choose any tool or IDE to write and debug spiders."
msgstr ""

#: ../../topics/commands.rst:346
msgid "fetch"
msgstr ""

#: ../../topics/commands.rst:348
msgid "Syntax: ``scrapy fetch <url>``"
msgstr ""

#: ../../topics/commands.rst:351
msgid "Downloads the given URL using the Scrapy downloader and writes the contents to standard output."
msgstr ""

#: ../../topics/commands.rst:354
msgid "The interesting thing about this command is that it fetches the page how the spider would download it. For example, if the spider has a ``USER_AGENT`` attribute which overrides the User Agent, it will use that one."
msgstr ""

#: ../../topics/commands.rst:358
msgid "So this command can be used to \"see\" how your spider would fetch a certain page."
msgstr ""

#: ../../topics/commands.rst:360
msgid "If used outside a project, no particular per-spider behaviour would be applied and it will just use the default Scrapy downloader settings."
msgstr ""

#: ../../topics/commands.rst:363
#: ../../topics/commands.rst:399
#: ../../topics/commands.rst:423
#: ../../topics/commands.rst:462
msgid "Supported options:"
msgstr ""

#: ../../topics/commands.rst:365
#: ../../topics/commands.rst:401
#: ../../topics/commands.rst:425
#: ../../topics/commands.rst:464
msgid "``--spider=SPIDER``: bypass spider autodetection and force use of specific spider"
msgstr ""

#: ../../topics/commands.rst:367
msgid "``--headers``: print the response's HTTP headers instead of the response's body"
msgstr ""

#: ../../topics/commands.rst:369
#: ../../topics/commands.rst:403
msgid "``--no-redirect``: do not follow HTTP 3xx redirects (default is to follow them)"
msgstr ""

#: ../../topics/commands.rst:390
msgid "view"
msgstr ""

#: ../../topics/commands.rst:392
msgid "Syntax: ``scrapy view <url>``"
msgstr ""

#: ../../topics/commands.rst:395
msgid "Opens the given URL in a browser, as your Scrapy spider would \"see\" it. Sometimes spiders see pages differently from regular users, so this can be used to check what the spider \"sees\" and confirm it's what you expect."
msgstr ""

#: ../../topics/commands.rst:413
msgid "shell"
msgstr ""

#: ../../topics/commands.rst:415
msgid "Syntax: ``scrapy shell [url]``"
msgstr ""

#: ../../topics/commands.rst:418
msgid "Starts the Scrapy shell for the given URL (if given) or empty if no URL is given. Also supports UNIX-style local file paths, either relative with ``./`` or ``../`` prefixes or absolute file paths. See :ref:`topics-shell` for more info."
msgstr ""

#: ../../topics/commands.rst:427
msgid "``-c code``: evaluate the code in the shell, print the result and exit"
msgstr ""

#: ../../topics/commands.rst:429
msgid "``--no-redirect``: do not follow HTTP 3xx redirects (default is to follow them); this only affects the URL you may pass as argument on the command line; once you are inside the shell, ``fetch(url)`` will still follow HTTP redirects by default."
msgstr ""

#: ../../topics/commands.rst:454
msgid "parse"
msgstr ""

#: ../../topics/commands.rst:456
msgid "Syntax: ``scrapy parse <url> [options]``"
msgstr ""

#: ../../topics/commands.rst:459
msgid "Fetches the given URL and parses it with the spider that handles it, using the method passed with the ``--callback`` option, or ``parse`` if not given."
msgstr ""

#: ../../topics/commands.rst:466
msgid "``--a NAME=VALUE``: set spider argument (may be repeated)"
msgstr ""

#: ../../topics/commands.rst:468
msgid "``--callback`` or ``-c``: spider method to use as callback for parsing the response"
msgstr ""

#: ../../topics/commands.rst:471
msgid "``--meta`` or ``-m``: additional request meta that will be passed to the callback request. This must be a valid json string. Example: --meta='{\"foo\" : \"bar\"}'"
msgstr ""

#: ../../topics/commands.rst:474
msgid "``--cbkwargs``: additional keyword arguments that will be passed to the callback. This must be a valid json string. Example: --cbkwargs='{\"foo\" : \"bar\"}'"
msgstr ""

#: ../../topics/commands.rst:477
msgid "``--pipelines``: process items through pipelines"
msgstr ""

#: ../../topics/commands.rst:479
msgid "``--rules`` or ``-r``: use :class:`~scrapy.spiders.CrawlSpider` rules to discover the callback (i.e. spider method) to use for parsing the response"
msgstr ""

#: ../../topics/commands.rst:483
msgid "``--noitems``: don't show scraped items"
msgstr ""

#: ../../topics/commands.rst:485
msgid "``--nolinks``: don't show extracted links"
msgstr ""

#: ../../topics/commands.rst:487
msgid "``--nocolour``: avoid using pygments to colorize the output"
msgstr ""

#: ../../topics/commands.rst:489
msgid "``--depth`` or ``-d``: depth level for which the requests should be followed recursively (default: 1)"
msgstr ""

#: ../../topics/commands.rst:492
msgid "``--verbose`` or ``-v``: display information for each depth level"
msgstr ""

#: ../../topics/commands.rst:516
msgid "settings"
msgstr ""

#: ../../topics/commands.rst:518
msgid "Syntax: ``scrapy settings [options]``"
msgstr ""

#: ../../topics/commands.rst:521
msgid "Get the value of a Scrapy setting."
msgstr ""

#: ../../topics/commands.rst:523
msgid "If used inside a project it'll show the project setting value, otherwise it'll show the default Scrapy value for that setting."
msgstr ""

#: ../../topics/commands.rst:526
#: ../../topics/commands.rst:544
msgid "Example usage::"
msgstr ""

#: ../../topics/commands.rst:536
msgid "runspider"
msgstr ""

#: ../../topics/commands.rst:538
msgid "Syntax: ``scrapy runspider <spider_file.py>``"
msgstr ""

#: ../../topics/commands.rst:541
msgid "Run a spider self-contained in a Python file, without having to create a project."
msgstr ""

#: ../../topics/commands.rst:552
msgid "version"
msgstr ""

#: ../../topics/commands.rst:554
msgid "Syntax: ``scrapy version [-v]``"
msgstr ""

#: ../../topics/commands.rst:557
msgid "Prints the Scrapy version. If used with ``-v`` it also prints Python, Twisted and Platform info, which is useful for bug reports."
msgstr ""

#: ../../topics/commands.rst:563
msgid "bench"
msgstr ""

#: ../../topics/commands.rst:567
msgid "Syntax: ``scrapy bench``"
msgstr ""

#: ../../topics/commands.rst:570
msgid "Run a quick benchmark test. :ref:`benchmarking`."
msgstr ""

#: ../../topics/commands.rst:573
msgid "Custom project commands"
msgstr ""

#: ../../topics/commands.rst:575
msgid "You can also add your custom project commands by using the :setting:`COMMANDS_MODULE` setting. See the Scrapy commands in `scrapy/commands`_ for examples on how to implement your commands."
msgstr ""

#: ../../topics/commands.rst:583
msgid "COMMANDS_MODULE"
msgstr ""

#: ../../topics/commands.rst:585
msgid "Default: ``''`` (empty string)"
msgstr ""

#: ../../topics/commands.rst:587
msgid "A module to use for looking up custom Scrapy commands. This is used to add custom commands for your Scrapy project."
msgstr ""

#: ../../topics/commands.rst:590
msgid "Example:"
msgstr ""

#: ../../topics/commands.rst:599
msgid "Register commands via setup.py entry points"
msgstr ""

#: ../../topics/commands.rst:601
msgid "This is an experimental feature, use with caution."
msgstr ""

#: ../../topics/commands.rst:603
msgid "You can also add Scrapy commands from an external library by adding a ``scrapy.commands`` section in the entry points of the library ``setup.py`` file."
msgstr ""

#: ../../topics/commands.rst:607
msgid "The following example adds ``my_command`` command:"
msgstr ""
